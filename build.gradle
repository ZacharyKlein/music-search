buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath "se.transmode.gradle:gradle-docker:1.2"
    }
}

apply plugin: 'docker'

group 'micronautsamples'
version '0.1'

task copyClientResources(dependsOn: ':music-client:build') {
    group = 'build'
    description = 'Copy client resources into server'
}

copyClientResources.doFirst {
    copy {
        from "${project(':music-client').projectDir}/dist"
        into "${project(':music-service').buildDir}/resources/main/public/"
    }
}

task assembleServerAndClient(dependsOn: ['copyClientResources', ':music-service:shadowJar']) {
    group = 'build'
    description = 'Build combined server & client JAR'
}

task buildDocker(type: Docker) {
    baseImage = 'williamyeh/java8'
    maintainer = 'Jeff Scott Brown <brownj@objectcomputing.com>'
    push = project.hasProperty('pushDocker')
    addFile {
        from project('music-service').shadowJar
        rename {'music-search.jar'}
    }
    exposePort 8080
    entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/music-search.jar'])
}

buildDocker.dependsOn 'assembleServerAndClient'
